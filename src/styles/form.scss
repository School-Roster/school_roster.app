@import "variables";
@import "mixins";

.form-container {
  font-family: $primary-font;
  width: 95%;
  margin: 0 auto;
  margin-top: 20px;

  .title {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    margin-top: 1.5rem;
    margin-left: 1rem;
    font-size: 1.5rem;
    color: $primary-color;
    font-weight: bold;
    margin-bottom: 1rem;

    img {
      width: 40px;
      height: 40px;
      margin-right: 0.5rem;
      filter: $filter-primary;
    }

    body.dark & {
      color: map-get($dark-theme, fg-color);
      img {
        filter: $filter-white;
      }
    }
  }

  .divider {
    display: block;
    width: 100%;
    height: 1px;
    background-color: $black;
    margin-bottom: 1rem;

    body.dark & {
      background-color: $primary-color;
    }
  }

  .controls {
    display: flex;
    justify-content: space-between;
    margin-top: 1rem;

    .controls-left {
      display: flex;
      align-items: center;

      .controls-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 42px;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        color: $white;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        border: none;
        transition: background-color 0.3s, transform 0.5s ease-in-out;
      }

      // Estilo para el botón de nuevo
      .new-button {
        @extend .controls-btn;
        background-color: $primary-color;
        visibility: visible;

        &:hover {
          background-color: lighten($primary-color, 10%);
          transform: scale(1.02);
        }

        img {
          width: 20px;
          height: 20px;
          margin-right: 0.5rem;
          filter: $filter-white;
        }
      }

      // Estilo para el botón de cancelar
      .cancel-button {
        @extend .controls-btn;
        background-color: $red;
        opacity: 0;
        transform: translateY(-10px); // Animación para ocultar el botón
        margin-left: 1rem;
        pointer-events: none;
        transition: opacity 0.5s, transform 0.5s ease-in-out;

        // Estilo para el botón de cancelar cuando se muestra
        &.show {
          opacity: 1;
          pointer-events: all;
          transform: translateY(0);
        }

        &:hover {
          background-color: darken($red, 6%);
          transition: background-color 0.3s ease-in-out;
        }
      }
    }

    .controls-right {
      display: flex;
      align-items: center;

      .search {
        --width: 200px;    
        --height: 42px;      

        // Estilo para el contenedor del input
        background: $black;
        width: auto;
        height: var(--height);
        position: relative;
        overflow: hidden;
        border-radius: 6px;
        display: flex;
        justify-content: center;
        align-items: center;

        body.dark & {
          background: map-get($dark-theme, bg-color);
        }

        // Estilo para el input
        input[type="text"] {
          position: relative;
          width: var(--height);
          height: var(--height);
          color: $black;
          border: 0;
          box-sizing: border-box;
          outline: none;
          padding: 0 0 0 40px;
          transition: width .6s ease;
          z-index: 10;
          opacity: 0;
          cursor: pointer;

          &:focus {
            z-index: 0;
            opacity: 1;
            width: var(--width);
            ~ .symbol {
              &::before {
                width: 0%;
              }
              &:after {
                clip-path: inset(0% 0% 0% 100%);
                transition: clip-path .04s linear .105s;
              }
              .cloud {
                top: -30px;
                left: -30px;
                transform: translate(0, 0);
                transition: all .6s ease;
              }
              .lens {
                left: 15px;
                transform: translate(0, 0);
                fill: $black;
                transition: top .5s ease .1s, left .5s ease .1s, fill .3s ease;
              }
            }
          }
        }
        .symbol {
          height: 100%;
          width: 100%;
          position: absolute;
          top: 0;
          z-index: 1;
          display: flex;
          justify-content: center;
          align-items: center;
          &:before {
            content:"";
            position: absolute;
            right: 0;
            width: 100%;
            height: 100%;
            background: $black;
            z-index: -1;
            transition: width .6s ease;

            body.dark & {
              background: $other-color;
            }

            &:hover {
              opacity: 1;
            }
          }
          &:after {
            content:"";
            position: absolute;
            top: 21px;
            left: 21px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: $black;
            z-index: 1;
            clip-path: inset(0% 0% 0% 0%);
            transition: clip-path .04s linear .225s;

            body.dark & {
              background: $other-color;
            }
          }
          .lens {
            position: absolute;
            fill: $white;
            stroke: none;

            body.dark & {
              fill: $black;
            }
          }
          .lens {
            fill: $white;
            width: 12px;
            height: 12px;
            z-index: 2;
            transition: top .3s ease, left .3s ease, fill .2s ease .2s;

            body.dark & {
              fill: $black;
            }
          }
        }
      }
    }
  }
}
