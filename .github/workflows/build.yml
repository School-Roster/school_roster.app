name: 'Build and Release'

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          # Add Ubuntu 22.04 (Jammy) repository to get libwebkit2gtk-4.0-dev
          echo "deb http://archive.ubuntu.com/ubuntu jammy main universe" | sudo tee -a /etc/apt/sources.list
          # Update package lists
          sudo apt-get update
          # Install dependencies (using libwebkit2gtk-4.0-dev from Jammy)
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          # Remove the Jammy repository to avoid potential issues in the future
          sudo sed -i '/jammy main universe/d' /etc/apt/sources.list


      - name: Install frontend dependencies
        run: pnpm install

      # Fix SvelteKit prerender configuration
      - name: Update SvelteKit configuration
        run: |
          echo "Updating svelte.config.js to fix prerendering issue"
          cat > svelte.config.js << 'EOL'
          import adapter from '@sveltejs/adapter-static';

          /** @type {import('@sveltejs/kit').Config} */
          const config = {
            kit: {
              adapter: adapter({
                fallback: 'index.html'
              }),
              prerender: {
                entries: [],
                handleHttpError: ({ path, referrer, message }) => {
                  // Ignore prerendering warnings for dynamic routes
                  if (path.includes('[windowName]')) return;
                  
                  console.warn(`${path} referred from ${referrer}: ${message}`);
                }
              }
            }
          };

          export default config;
          EOL

      # Fix SASS deprecation warnings
      - name: Fix SASS deprecation warnings
        run: |
          echo "Creating .npmrc with SASS deprecation handling"
          echo "sass_deprecate=false" > .npmrc

      # Fix the dynamic route TypeScript issue
      - name: Fix dynamic route TypeScript issue
        run: |
          # Create a simplified version of the +page.svelte file that doesn't use $types import
          cat > src/routes/window/[windowName]/+page.svelte << 'EOL'
          <!--------------------
          Cada pagina de la aplicacion se renderiza
          y crea una nueva ventana, este componente
          simplemente llama a la vista deseada.
          ---------------------->

          <script lang="ts">
            // Use a simple interface instead of importing from ./$types
            interface PageData {
              page: string;
            }
            export let data: PageData;

            /* Formularios */
            import SubjectsView from '$lib/components/forms/subjects/SubjectsView.svelte';
            import TeachersView from '$lib/components/forms/teachers/TeachersView.svelte';
            import GroupsView from '$lib/components/forms/groups/GroupsView.svelte';
            import ClassroomView from '$lib/components/forms/classrooms/ClassroomView.svelte';
            import loginView from'$lib/components/forms/login/login-view.svelte';

            /* Utilidad */
            import SettingsView from '$lib/components/utils/Settings.svelte';
            import NotFoundView from '$lib/components/utils/NotFound.svelte';
           
            let view: any;
            switch (data.page) {
              case 'subjects':
                view = SubjectsView;
                break;
              case 'teachers':
                view = TeachersView;
                break;
              case 'settings':
                view = SettingsView;
                break;
              case 'groups':
                view = GroupsView;
                break;
              case 'classroom':
                view = ClassroomView;
                break;
              default:
                view = NotFoundView;
                break;
              case 'login':
                view = loginView;
                break;
              
            }

            /**
              * Carga el tema de la aplicaciÃ³n
            **/
            import { onMount } from "svelte";

            const applySystemTheme = () => {
              const darkModeMediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
              if (darkModeMediaQuery.matches) {
                document.body.classList.add("dark");
              } else {
                document.body.classList.remove("dark");
              }
            };

            const applyTheme = () => {
              const theme = localStorage.getItem("theme");
              if (theme === "dark") {
                document.body.classList.add("dark");
              } else if (theme === "light") {
                document.body.classList.remove("dark");
              } else {
                applySystemTheme();
              }
            }

            onMount(() => {
              applyTheme();
            });
          </script>

          <svelte:component this={view} />
          EOL

      # Generate types before building
      - name: Generate SvelteKit types
        run: pnpm svelte-kit sync

      # Build the app
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'School Roster v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
